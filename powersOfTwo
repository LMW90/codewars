// Check if a number is a factor of a base

function checkForFactor (base, factor) {
  return base % factor === 0
}

// Given a non-empty array of integers, return the result of multiplying the values together in order.

const grow = arr => arr.reduce((t, c) => t * c, 1)

// Complete the solution so that it reverses all of the words within the string passed in. 

function reverseWords(str){
  return str.split(' ').reverse().join(' ')
}

// In this Kata you are expected to find the coefficients of quadratic equation of the given two roots (x1 and x2).
// Equation will be the form of ax^2 + bx + c = 0
// Return type is a Vector (tuple in Rust, Array in Ruby) containing coefficients of the equations in the order (a, b, c).
// Since there are infinitely many solutions to this problem, we fix a = 1.
// Remember, the roots can be written like (x-x1) * (x-x2) = 0

function quadratic(x1, x2){
  return [1, (-x1 + -x2), x1 * x2]
}

/* Remove an exclamation mark from the end of a string. For a beginner kata, you can assume that the input data is always a string, no need to verify it.
*/
function remove (string) {
  return string.charAt(string.length-1) == '!' ? string.substring(0, -1) : string // no regex allowed
}

// Complete the function that takes a non-negative integer n as input, and returns a list of all the powers of 2 with the exponent ranging from 0 to n ( inclusive ).

function powersOfTwo(n){
  var result = []
  for (var i = 0; i <= n; i++) {
    result.push(Math.pow(2, i))
  }
  return result
}

// Write function RemoveExclamationMarks which removes all exclamation marks from a given string.

function removeExclamationMarks(s) {
  return s.replace(/!/g, '')
}

// given an integer or a floating-point number, find its opposite

function opposite(number) {
  return(-number);
}

// Add the value "codewars" to the websites array.

// websites.push('codewars')


// There is an object/class already created called MrFreeze. Mark this object as frozen so that no other changes can be made to it.

// Object.freeze(MrFreeze)

// Create a function with two arguments that will return an array of the first n multiples of x.

function countBy(x, n) {
  let z = []
  for (let i = 1; i <= n; i++) {
    z.push(x * i)
  }
  return z
}

// Make a simple function called greet that returns the most-famous "hello world!".

const greet = () => "hello world!";

/* Nathan loves cycling. Because Nathan knows it is important to stay hydrated, he drinks 0.5 litres of water per hour of cycling. You get given the time in hours and you need to return the number of litres Nathan will drink, rounded to the smallest value. */

const litres = time => Math.floor(time / 2);

/* After a hard quarter in the office you decide to get some rest on a vacation. So you will book a flight for you and your girlfriend and try to leave all the mess behind you.

You will need a rental car in order for you to get around in your vacation. The manager of the car rental makes you some good offers.

Every day you rent the car costs $40. If you rent the car for 7 or more days, you get $50 off your total. Alternatively, if you rent the car for 3 or more days, you get $20 off your total.

Write a code that gives out the total amount for different days(d).
*/

function rentalCarCost(d) {
  let total = 40 * d
  let discount = (d >= 7)? 50 : (d >= 3)? 20 : 0
  return total - discount
}

/*You're at the zoo... all the meerkats look weird. Something has gone terribly wrong - someone has gone and switched their heads and tails around!

Save the animals by switching them back. You will be given an array which will have three values (tail, body, head). It is your job to re-arrange the array so that the animal is the right way round (head, body, tail).

Same goes for all the other arrays/lists that you will get in the tests: you have to change the element positions with the same exact logics

Simples!*/

function fixTheMeerkat(arr) {
  return arr.reverse()
 }

//  Given an array of integers as strings and numbers, return the sum of the array values as if all were numbers.

function sumMix(x){
  return x.reduce((acc, item) => acc + +item, 0)
}

// Given an array of integers, return a new array with each value doubled.

function maps(x){
  return x.map(item => item * 2)
}

/* Complete the square sum function so that it squares each number passed into it and then sums the results together.

For example, for [1, 2, 2] it should return 9 because 1^2 + 2^2 + 2^2 = 9. */

function squareSum(numbers){
  return numbers.reduce((acc, item) => acc + item ** 2, 0)
}

/* For every good kata idea there seem to be quite a few bad ones!

In this kata you need to check the provided array (x) for good ideas 'good' and bad ideas 'bad'. If there are one or two good ideas, return 'Publish!', if there are more than 2 return 'I smell a series!'. If there are no good ideas, as is often the case, return 'Fail!'.
*/

function well(x){
  let count = x.filter(item => item === 'good').length
  return (count > 2)? 'I smell a series!' : (count == 0)? 'Fail!' : 'Publish!'
}
